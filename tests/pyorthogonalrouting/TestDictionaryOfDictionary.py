
from unittest import TestSuite
from unittest import main as unitTestMain

from codeallybasic.UnitTestBase import UnitTestBase

from pyorthogonalrouting.Point import Point
from pyorthogonalrouting.PointGraph import XStr
from pyorthogonalrouting.PointGraph import XToYDict
from pyorthogonalrouting.PointGraph import YStr
from pyorthogonalrouting.PointGraph import YToPointNodeDict
from pyorthogonalrouting.PointNode import PointNode


class TestDictionaryOfDictionary(UnitTestBase):
    """
    Auto generated by the one and only:
        Gato Malo â€“ Humberto A. Sanchez II
        Generated: 31 March 2024
    """

    @classmethod
    def setUpClass(cls):
        super().setUpClass()

    def setUp(self):
        super().setUp()

    def tearDown(self):
        super().tearDown()

    def testIndexing(self):

        x1Str: XStr = XStr('23')
        x2Str: str = '42'

        y1Str: YStr = YStr('100')
        y2Str: YStr = YStr('500')

        index: XToYDict = XToYDict({})

        yToPointNodeDict: YToPointNodeDict = YToPointNodeDict({})

        pt1:     Point     = Point(x=1, y=1)
        ptNode1: PointNode = PointNode(distance=100, data=pt1)

        yToPointNodeDict[y1Str] = ptNode1

        pt2:     Point     = Point(x=2, y=2)
        ptNode2: PointNode = PointNode(distance=100, data=pt2)
        yToPointNodeDict[y2Str] = ptNode2

        index[x1Str] = yToPointNodeDict

        self.logger.debug(f'{index=}')

    def testAppendListToList(self):

        list1 = [1, 2, 3, 4]
        list2 = [5, 6, 7, 8]

        list1 = list1 + list2

        self.logger.debug(f'{list1}')


def suite() -> TestSuite:
    import unittest

    testSuite: TestSuite = TestSuite()

    testSuite.addTest(unittest.defaultTestLoader.loadTestsFromTestCase(testCaseClass=TestDictionaryOfDictionary))

    return testSuite


if __name__ == '__main__':
    unitTestMain()
